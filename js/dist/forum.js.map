{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@fof/impersonate/webpack/bootstrap","webpack://@fof/impersonate/webpack/runtime/compat get default export","webpack://@fof/impersonate/webpack/runtime/define property getters","webpack://@fof/impersonate/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/impersonate/webpack/runtime/make namespace object","webpack://@fof/impersonate/external root \"flarum.core.compat['common/extend']\"","webpack://@fof/impersonate/external root \"flarum.core.compat['forum/app']\"","webpack://@fof/impersonate/external root \"flarum.core.compat['forum/utils/UserControls']\"","webpack://@fof/impersonate/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/impersonate/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/impersonate/external root \"flarum.core.compat['common/app']\"","webpack://@fof/impersonate/external root \"flarum.core.compat['common/components/Button']\"","webpack://@fof/impersonate/external root \"flarum.core.compat['common/components/Modal']\"","webpack://@fof/impersonate/external root \"flarum.core.compat['common/helpers/username']\"","webpack://@fof/impersonate/external root \"flarum.core.compat['common/utils/Stream']\"","webpack://@fof/impersonate/external root \"flarum.core.compat['common/utils/withAttr']\"","webpack://@fof/impersonate/./src/common/components/ImpersonateModal.tsx","webpack://@fof/impersonate/./src/common/components/LoginAsUserButton.tsx","webpack://@fof/impersonate/external root \"flarum.core.compat['common/extenders']\"","webpack://@fof/impersonate/external root \"flarum.core.compat['common/models/User']\"","webpack://@fof/impersonate/external root \"flarum.core.compat['common/Model']\"","webpack://@fof/impersonate/./src/common/models/Impersonate.ts","webpack://@fof/impersonate/./src/common/extend.ts","webpack://@fof/impersonate/./src/forum/extend.ts","webpack://@fof/impersonate/./src/forum/index.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/UserControls'];","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/username'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/Stream'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/withAttr'];","import app from 'flarum/common/app';\nimport Modal, { IInternalModalAttrs } from 'flarum/common/components/Modal';\n\nimport Button from 'flarum/common/components/Button';\nimport username from 'flarum/common/helpers/username';\nimport Stream from 'flarum/common/utils/Stream';\nimport withAttr from 'flarum/common/utils/withAttr';\nimport type User from 'flarum/common/models/User';\nimport type Mithril from 'mithril';\nimport type { NestedStringArray } from '@askvortsov/rich-icu-message-formatter';\n\nexport interface ImpersonateModalAttrs extends IInternalModalAttrs {\n  user: User;\n  callback?: () => void;\n}\n\nexport default class ImpersonateModal extends Modal<ImpersonateModalAttrs> {\n  user!: Stream<User>;\n  reason!: Stream<string>;\n  loading!: Stream<boolean>;\n  reasonEnabled!: Stream<boolean>;\n  reasonRequired!: Stream<boolean>;\n\n  oninit(vnode: Mithril.Vnode<ImpersonateModalAttrs, this>): void {\n    super.oninit(vnode);\n\n    this.user = this.attrs.user;\n    this.reason = Stream('');\n    this.loading = false;\n    this.reasonEnabled = app.initializers.has('fof-moderator-notes');\n    this.reasonRequired = this.user.impersonateReasonRequired();\n  }\n\n  className(): string {\n    return 'ImpersonateModal Modal--medium';\n  }\n\n  title(): NestedStringArray {\n    return app.translator.trans('fof-impersonate.lib.modal.title');\n  }\n\n  content(): Mithril.Children {\n    return (\n      <div className=\"Modal-body\">\n        <div>\n          <p>\n            {app.translator.trans('fof-impersonate.lib.modal.label', {\n              username: username(this.user),\n            })}\n          </p>\n        </div>\n        <div className=\"Form Form--centered\">\n          {this.reasonEnabled ? (\n            <div className=\"Form-group\">\n              <textarea\n                className=\"FormControl\"\n                value={this.reason()}\n                placeholder={\n                  this.reasonRequired\n                    ? app.translator.trans('fof-impersonate.lib.modal.placeholder_required')\n                    : app.translator.trans('fof-impersonate.lib.modal.placeholder_optional')\n                }\n                oninput={withAttr('value', this.reason)}\n                rows=\"4\"\n              />\n            </div>\n          ) : (\n            ''\n          )}\n          <div className=\"Form-group\">\n            {Button.component(\n              {\n                className: 'Button Button--primary Button--block',\n                type: 'submit',\n                loading: this.loading,\n              },\n              app.translator.trans('fof-impersonate.lib.modal.impersonate_username', {\n                username: username(this.user),\n              })\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  onsubmit(e: Event): void {\n    e.preventDefault();\n    this.loading = true;\n\n    app.store\n      .createRecord('impersonate')\n      .save({\n        userId: this.user.id(),\n        reason: this.reason(),\n      })\n      .then(this.attrs.callback)\n      .catch(() => {\n        this.loading = false;\n      });\n  }\n}\n","import app from 'flarum/common/app';\nimport Button from 'flarum/common/components/Button';\nimport type { IButtonAttrs } from 'flarum/common/components/Button';\nimport type User from 'flarum/common/models/User';\nimport ImpersonateModal from './ImpersonateModal';\n\nexport interface ILoginAsUserButtonAttrs extends IButtonAttrs {\n  user: User;\n  redirectTo?: string;\n}\n\nexport default class LoginAsUserButton extends Button<ILoginAsUserButtonAttrs> {\n  view() {\n    return (\n      <Button icon=\"fas fa-id-card\" onclick={this.loginAsUser.bind(this)}>\n        {app.translator.trans('fof-impersonate.lib.user_controls.impersonate_button')}\n      </Button>\n    );\n  }\n\n  loginAsUser(): void {\n    const { user, redirectTo } = this.attrs;\n    app.modal.show(ImpersonateModal, {\n      callback: () => {\n        redirectTo ? (window.location.href = redirectTo) : window.location.reload();\n      },\n      user,\n    });\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extenders'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/User'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","import Model from 'flarum/common/Model';\n\nexport default class Impersonate extends Model {\n  reason() {\n    return Model.attribute<string>('reason').call(this);\n  }\n}\n","import Extend from 'flarum/common/extenders';\nimport User from 'flarum/common/models/User';\nimport Impersonate from './models/Impersonate';\n\nexport default [\n  new Extend.Store() //\n    .add('impersonate', Impersonate),\n\n  new Extend.Model(User) //\n    .attribute<boolean>('canFoFImpersonate')\n    .attribute<boolean>('impersonateReasonRequired'),\n];\n","import { default as commonExtend } from '../common/extend';\n\nexport default [...commonExtend];\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport UserControls from 'flarum/forum/utils/UserControls';\nimport LoginAsUserButton from '../common/components/LoginAsUserButton';\n\nexport { default as extend } from './extend';\n\napp.initializers.add('fof-impersonate', () => {\n  extend(UserControls, 'moderationControls', (items, user) => {\n    if (user.canFoFImpersonate()) {\n      items.add('fof-impersonate-login', <LoginAsUserButton user={user} />);\n    }\n  });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","t","e","setPrototypeOf","bind","__proto__","_inheritsLoose","create","constructor","ImpersonateModal","_Modal","_this","_len","arguments","length","args","Array","_key","apply","concat","user","reason","loading","reasonEnabled","reasonRequired","_proto","oninit","vnode","this","attrs","Stream","app","has","impersonateReasonRequired","className","title","trans","content","m","username","placeholder","oninput","withAttr","rows","Button","type","onsubmit","_this2","preventDefault","createRecord","save","userId","id","then","callback","Modal","LoginAsUserButton","_Button","view","icon","onclick","loginAsUser","_this$attrs","redirectTo","show","window","location","href","reload","Impersonate","_Model","Model","Extend","add","User","attribute","commonExtend","extend","UserControls","items","canFoFImpersonate"],"sourceRoot":""}